namespace = mym_debug

mym_debug.1 = {
	type = country_event
	placement = ROOT
	title = mym_debug.1.t
	desc = mym_debug.1.d
	flavor = mym_debug.1.f

	duration = 3

	event_image = {
		texture = gfx/event_images/bgy_debug.dds
	}

	trigger = {
		
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = gfx/interface/icons/event_icons/waving_flag.dds

	# Closes the event with no additional effect.
	option = {
		name = mym_debug.1.a
		default_option = yes
		if = {
			limit = {
				has_variable = mym_debug_menu_open_var
			}
			remove_variable = mym_debug_menu_open_var
		}
		ai_chance = {
			base = 100
		}
	}
	
	# Sets the ideology of all eligible politicians to fascist.
	option = {
		name = mym_debug.1.b

		trigger = {
			exists = ideology:ideology_fascist
			is_possible_ideology_fascist = yes
			any_scope_character = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_fascist }
			}
		}
		
		every_scope_character = {
			limit = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_fascist }
				NOT = { has_ideology = ideology:ideology_burgundist }
			}
			set_ideology = ideology:ideology_fascist
		}

		trigger_event = { id = mym_debug.1 popup = yes }
	}

	# Sets the ideology of all eligible politicians to communist.
	option = {
		name = mym_debug.1.c
		
		trigger = {
			exists = ideology:ideology_communist
			is_possible_ideology_communist = yes
			any_scope_character = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_communist }
			}
		}

		every_scope_character = {
			limit = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_communist }
				NOT = { has_ideology = ideology:ideology_burgundist }
			}
			set_ideology = ideology:ideology_communist
		}

		trigger_event = { id = mym_debug.1 popup = yes }
	}

	# Sets the ideology of all eligible politicians to anarchist.
	option = {
		name = mym_debug.1.e

		trigger = {
			exists = ideology:ideology_anarchist
			is_possible_ideology_anarchist = yes
			any_scope_character = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_anarchist }
			}
		}

		every_scope_character = {
			limit = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_anarchist }
				NOT = { has_ideology = ideology:ideology_burgundist }
			}
			set_ideology = ideology:ideology_anarchist
		}

		trigger_event = { id = mym_debug.1 popup = yes }
	}

	# Sets the ideology of all eligible politicians to anarcho-libertarian.
	option = {
		name = mym_debug.1.g

		trigger = {
			exists = ideology:ideology_anarcho_libertarian
			is_possible_ideology_anarchist = yes
			any_scope_character = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_anarcho_libertarian }
			}
		}

		every_scope_character = {
			limit = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_anarcho_libertarian }
				NOT = { has_ideology = ideology:ideology_burgundist }
			}
			set_ideology = ideology:ideology_anarcho_libertarian
		}

		trigger_event = { id = mym_debug.1 popup = yes }
	}

	# Sets the ideology of all eligible politicians to libertarian utopian.
	option = {
		name = mym_debug.1.g

		trigger = {
			exists = ideology:ideology_libertarian_utopian
			is_possible_ideology_anarchist = yes
			any_scope_character = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_libertarian_utopian }
			}
		}

		every_scope_character = {
			limit = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_libertarian_utopian }
				NOT = { has_ideology = ideology:ideology_burgundist }
			}
			set_ideology = ideology:ideology_libertarian_utopian
		}

		trigger_event = { id = mym_debug.1 popup = yes }
	}

	# Sets the ideology of all eligible politicians to neo-industrialist.
	option = {
		name = mym_debug.1.j

		trigger = {
			exists = ideology:ideology_neo_industrialist
			is_possible_ideology_accelerationist = yes
			any_scope_character = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_neo_industrialist }
			}
		}

		every_scope_character = {
			limit = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_neo_industrialist }
				NOT = { has_ideology = ideology:ideology_burgundist }
			}
			set_ideology = ideology:ideology_neo_industrialist
		}

		trigger_event = { id = mym_debug.1 popup = yes }
	}

	# Sets the ideology of all eligible politicians to hyper-individualist.
	option = {
		name = mym_debug.1.j

		trigger = {
			exists = ideology:ideology_hyper_individualist
			is_possible_ideology_accelerationist = yes
			any_scope_character = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_hyper_individualist }
			}
		}

		every_scope_character = {
			limit = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_hyper_individualist }
				NOT = { has_ideology = ideology:ideology_burgundist }
			}
			set_ideology = ideology:ideology_hyper_individualist
		}

		trigger_event = { id = mym_debug.1 popup = yes }
	}

	# Sets the ideology of all eligible politicians to recreationist.
	option = {
		name = mym_debug.1.j

		trigger = {
			exists = ideology:ideology_recreationist
			is_possible_ideology_accelerationist = yes
			any_scope_character = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_recreationist }
			}
		}

		every_scope_character = {
			limit = {
				has_role = politician
				NOT = { has_ideology = ideology:ideology_recreationist }
				NOT = { has_ideology = ideology:ideology_burgundist }
			}
			set_ideology = ideology:ideology_recreationist
		}

		trigger_event = { id = mym_debug.1 popup = yes }
	}
	
	# Sets the name of the secret police interest group based on the country's primary culture.
	option = {
		name = mym_debug.1.i

		trigger = {
			any_country = {
				exists = ig:ig_secret_police
			}
		}

		every_country = {
			if = {
				limit = { exists = ig:ig_secret_police }
				if = {
					limit = {
						country_has_primary_culture = cu:north_german
					}
					ig:ig_secret_police = {
						set_interest_group_name = ig_secret_police_north_german
					}
				}
				else_if = {
					limit = {
						country_has_primary_culture = cu:south_german
					}
					ig:ig_secret_police = {
						set_interest_group_name = ig_secret_police_south_german
					}
				}
				else_if = {
					limit = {
						country_has_primary_culture = cu:russian
					}
					ig:ig_secret_police = {
						set_interest_group_name = ig_secret_police_RUS_communist
					}
				}
				else_if = {
					limit = {
						country_has_primary_culture = cu:romanian
					}
					ig:ig_secret_police = {
						set_interest_group_name = ig_secret_police_romanian
					}
				}
				else_if = {
					limit = {
						country_has_primary_culture = cu:finnish
					}
					ig:ig_secret_police = {
						set_interest_group_name = ig_secret_police_finnish
					}
				}
				else_if = {
					limit = {
						any_primary_culture = {
							has_discrimination_trait = iberian_culture_group
						}
					}
					ig:ig_secret_police = {
						set_interest_group_name = ig_secret_police_spanish
					}
				}
				else_if = {
					limit = {
						any_primary_culture = {
							has_discrimination_trait = jewish_group
						}
					}
					ig:ig_secret_police = {
						set_interest_group_name = ig_secret_police_israel
					}
				}
			}
		}

		trigger_event = { id = mym_debug.1 popup = yes }
	}
}

mym_debug.2 = {
	type = country_event
	placement = ROOT
	title = mym_debug.2.t
	desc = mym_debug.2.d
	flavor = mym_debug.2.f

	duration = 3

	event_image = {
		texture = gfx/event_images/bgy_debug.dds
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = gfx/interface/icons/event_icons/waving_flag.dds

	immediate = {
		random_primary_culture = {
			save_scope_as = our_primary_culture
		}
	}

	# Closes the event
	option = {
		name = mym_debug.2.a
		default_option = yes
		if = {
			limit = {
				has_variable = mym_debug_menu_open_var
			}
			remove_variable = mym_debug_menu_open_var
		}
		ai_chance = {
			base = 100
		}
	}

	# Gives Era 4 Tech to all civilized nations - Can be fired only once
	option = {
		name = mym_debug.2.b

		trigger = {
			NOT = { has_variable = era_4_for_all_var }
		}

		custom_tooltip = {
			text = mym_debug.2.b_tt
			every_country = {
				limit = {
					NOT = { is_country_type = decentralized }
				}
				add_era_researched = era_4
				set_variable = era_4_for_all_var
			}
		}

		trigger_event = { id = mym_debug.2 popup = yes }
	}

	# Frees all civilized subject nations from their respective Overlord
	option = {
		name = mym_debug.2.c
		ai_chance = {
			base = 0
		}

		trigger = {
			any_country = {
				count > 0
				is_subject = yes
			}
		}

		custom_tooltip = {
			text = mym_debug.2.c_tt
			every_country = {
				limit = {
					NOT = { is_country_type = decentralized }
					is_subject = yes
				}
				make_independent = yes
			}
		}

		trigger_event = { id = mym_debug.2 popup = yes }
	}

	# CALLBACK PING -- Pretty much that, calls all members of the primary culture
	# (a random one if there are multiple) and state religion 
	# to the capital state of the applying nation
	option = {
		name = mym_debug.2.e
		trigger = {
			ROOT = THIS
		}
		every_country = {
			limit = {
				NOT = { ROOT = THIS }
			}
			every_scope_state = {
				every_scope_pop = {
					limit = {
						culture = scope:our_primary_culture
						religion = scope:state_religion_scope
					}
					move_pop = ROOT.capital
				}
			}
		}

		trigger_event = { id = mym_debug.2 popup = yes }
	}
}

mym_debug.3 = {
	type = country_event
	placement = ROOT
	title = mym_debug.3.t
	desc = mym_debug.3.d
	flavor = mym_debug.3.f

	duration = 3

	event_image = {
		texture = gfx/event_images/bgy_debug.dds
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = gfx/interface/icons/event_icons/waving_flag.dds

	# Closes the event with no additional effect.
	option = {
		name = mym_debug.3.a
		default_option = yes
		if = {
			limit = {
				has_variable = mym_debug_menu_open_var
			}
			remove_variable = mym_debug_menu_open_var
		}
		ai_chance = {
			base = 100
		}
	}

	# Makes a timocrat agitator the ruler if available, otherwise creates a new timocrat agitator and sets him as ruler.
	option = {
		name = mym_debug.3.b
		
		trigger = {
			exists = ideology:ideology_timocrat
			ruler = {
				NOT = {
					has_ideology = ideology:ideology_timocrat
				}
			}
		}
		if = {
			limit = {
				any_scope_character = {
					has_role = agitator
					has_ideology = ideology:ideology_timocrat
				}
			}
			random_scope_character = {
				limit = {
					has_role = agitator
					has_ideology = ideology:ideology_timocrat
				}
				remove_character_role = agitator
				set_character_as_ruler = yes
			}
		}
		else = {
			create_character = {
				is_agitator = yes
				ideology = ideology:ideology_timocrat
			}
		}
		
		trigger_event = { id = mym_debug.3 popup = yes }
	}

	# Makes a national fascist agitator the ruler if available, otherwise creates a new national fascist agitator and sets him as ruler.
	option = {
		name = mym_debug.3.c
		
		trigger = {
			exists = ideology:ideology_national_fascist
			ruler = {
				NOT = {
					has_ideology = ideology:ideology_national_fascist
				}
			}
		}
		if = {
			limit = {
				any_scope_character = {
					has_role = agitator
					has_ideology = ideology:ideology_national_fascist
				}
			}
			random_scope_character = {
				limit = {
					has_role = agitator
					has_ideology = ideology:ideology_national_fascist
				}
				remove_character_role = agitator
				set_character_as_ruler = yes
			}
		}
		else = {
			create_character = {
				is_agitator = yes
				ideology = ideology:ideology_national_fascist
			}
		}
		
		trigger_event = { id = mym_debug.3 popup = yes }
	}

	# Makes an anarcho-libertarian agitator the ruler if available, otherwise creates a new anarcho-libertarian agitator and sets him as ruler.
	option = {
		name = mym_debug.3.e
		
		trigger = {
			exists = ideology:ideology_anarcho_libertarian
			ruler = {
				NOT = {
					has_ideology = ideology:ideology_anarcho_libertarian
				}
			}
		}
		if = {
			limit = {
				any_scope_character = {
					has_role = agitator
					has_ideology = ideology:ideology_anarcho_libertarian
				}
			}
			random_scope_character = {
				limit = {
					has_role = agitator
					has_ideology = ideology:ideology_anarcho_libertarian
				}
				remove_character_role = agitator
				set_character_as_ruler = yes
			}
		}
		else = {
			create_character = {
				is_agitator = yes
				ideology = ideology:ideology_anarcho_libertarian
			}
		}
		
		trigger_event = { id = mym_debug.3 popup = yes }
	}

	# Makes an anti-statist agitator the ruler if available, otherwise creates a new anti-statist agitator and sets him as ruler.
	option = {
		name = mym_debug.3.g
		
		trigger = {
			exists = ideology:ideology_anti_statist
			ruler = {
				NOT = {
					has_ideology = ideology:ideology_anti_statist
				}
			}
		}
		if = {
			limit = {
				any_scope_character = {
					has_role = agitator
					has_ideology = ideology:ideology_anti_statist
				}
			}
			random_scope_character = {
				limit = {
					has_role = agitator
					has_ideology = ideology:ideology_anti_statist
				}
				remove_character_role = agitator
				set_character_as_ruler = yes
			}
		}
		else = {
			create_character = {
				is_agitator = yes
				ideology = ideology:ideology_anti_statist
			}
		}
		
		trigger_event = { id = mym_debug.3 popup = yes }
	}

	# Makes an anti-feminist agitator the ruler if available, otherwise creates a new anti-feminist agitator and sets him as ruler.
	option = {
		name = mym_debug.3.h
		
		trigger = {
			exists = ideology:ideology_anti_feminist
			ruler = {
				NOT = {
					has_ideology = ideology:ideology_anti_feminist
				}
			}
		}
		if = {
			limit = {
				any_scope_character = {
					has_role = agitator
					has_ideology = ideology:ideology_anti_feminist
				}
			}
			random_scope_character = {
				limit = {
					has_role = agitator
					has_ideology = ideology:ideology_anti_feminist
				}
				remove_character_role = agitator
				set_character_as_ruler = yes
			}
		}
		else = {
			create_character = {
				is_agitator = yes
				ideology = ideology:ideology_anti_feminist
			}
		}
		
		trigger_event = { id = mym_debug.3 popup = yes }
	}

	# Makes a secular humanitarian agitator the ruler if available, otherwise creates a new secular humanitarian agitator and sets him as ruler.
	option = {
		name = mym_debug.3.i
		
		trigger = {
			exists = ideology:ideology_secular_humanitarian
			ruler = {
				NOT = {
					has_ideology = ideology:ideology_secular_humanitarian
				}
			}
		}
		if = {
			limit = {
				any_scope_character = {
					has_role = agitator
					has_ideology = ideology:ideology_secular_humanitarian
				}
			}
			random_scope_character = {
				limit = {
					has_role = agitator
					has_ideology = ideology:ideology_secular_humanitarian
				}
				remove_character_role = agitator
				set_character_as_ruler = yes
			}
		}
		else = {
			create_character = {
				is_agitator = yes
				ideology = ideology:ideology_secular_humanitarian
			}
		}
		
		trigger_event = { id = mym_debug.3 popup = yes }
	}

	# Makes a libertarian utopian agitator the ruler if available, otherwise creates a new libertarian utopian agitator and sets him as ruler.
	option = {
		name = mym_debug.3.l
		
		trigger = {
			exists = ideology:ideology_libertarian_utopian
			ruler = {
				NOT = {
					has_ideology = ideology:ideology_libertarian_utopian
				}
			}
		}
		if = {
			limit = {
				any_scope_character = {
					has_role = agitator
					has_ideology = ideology:ideology_libertarian_utopian
				}
			}
			random_scope_character = {
				limit = {
					has_role = agitator
					has_ideology = ideology:ideology_libertarian_utopian
				}
				remove_character_role = agitator
				set_character_as_ruler = yes
			}
		}
		else = {
			create_character = {
				is_agitator = yes
				ideology = ideology:ideology_libertarian_utopian
			}
		}
		
		trigger_event = { id = mym_debug.3 popup = yes }
	}

	# Makes a burgundist leader agitator the ruler if available, otherwise creates a new burgundist leader agitator and sets him as ruler.
	option = {
		name = mym_debug.3.j
		
		trigger = {
			exists = ideology:ideology_burgundist
			ruler = {
				NOT = {
					has_ideology = ideology:ideology_burgundist
				}
			}
		}
		if = {
			limit = {
				ig:ig_burgundists = {
					is_in_government = yes
				}
				ruler = {
					NOT = {
						has_ideology = ideology:ideology_burgundist
					}
				}
			}
			ig:ig_burgundists = {
				leader = {
					set_character_as_ruler = yes
				}
			}
		}
		else_if = {
			limit = {
				any_scope_character = {
					NOT = { has_role = ruler }
					has_ideology = ideology:ideology_burgundist
				}
			}
			random_scope_character = {
				limit = {
					NOT = { has_role = ruler }
					has_ideology = ideology:ideology_burgundist
				}
				if = {
					limit = {
						has_role = agitator
					}
					remove_character_role = agitator
				}
				set_character_as_ruler = yes
			}
		}
		else = {
			create_character = {
				is_agitator = yes
				ideology = ideology:ideology_burgundist
			}
		}
		
		trigger_event = { id = mym_debug.3 popup = yes }
	}

	# Makes an agitator with one of the accelerationist ideologies (neo-industrialist, hyper-individualist, or recreationist) the ruler if available,
	# otherwise creates a new agitator with one of these ideologies and sets him as ruler (chosen randomly).
	option = {
		name = mym_debug.3.k
		
		trigger = {
			OR = {
				exists = ideology:ideology_neo_industrialist
				exists = ideology:ideology_hyper_individualist
				exists = ideology:ideology_recreationist
			}
			ruler = {
				NOR = {
					has_ideology = ideology:ideology_neo_industrialist
					has_ideology = ideology:ideology_hyper_individualist
					has_ideology = ideology:ideology_recreationist
				}
			}
		}
		if = {
			limit = {
				any_scope_character = {
					has_role = agitator
					OR = {
						has_ideology = ideology:ideology_neo_industrialist
						has_ideology = ideology:ideology_hyper_individualist
						has_ideology = ideology:ideology_recreationist
					}
				}
			}
			random_scope_character = {
				limit = {
					has_role = agitator
					OR = {
						has_ideology = ideology:ideology_neo_industrialist
						has_ideology = ideology:ideology_hyper_individualist
						has_ideology = ideology:ideology_recreationist
					}
				}
				remove_character_role = agitator
				set_character_as_ruler = yes
			}
		}
		else = {
			random_list = {
				33 = {
					create_character = {
						is_agitator = yes
						
						ideology = ideology:ideology_neo_industrialist
					}
				}
				33 = {
					create_character = {
						is_agitator = yes
						
						ideology = ideology:ideology_hyper_individualist
					}
				}
				33 = {
					create_character = {
						is_agitator = yes
						
						ideology = ideology:ideology_recreationist
					}
				}
			}
		}
		
		trigger_event = { id = mym_debug.3 popup = yes }
	}
}
